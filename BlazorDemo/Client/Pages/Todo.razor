@page "/Todo"

@using BlazorDemo.Client.Components.Todo
@using BlazorDemo.Shared.Models.Todo.ViewModels

<div class="row justify-content-center mt-5">
    <div class="col-lg-3">
        <Card>
            <CardHeader>
                @(_isEditing ? "Edit" : "New") Todo Item
            </CardHeader>
            <CardBody>
                <FormValidator @ref="_validator">
                    <FormInput @bind-Value="_editingItem.Title" Placeholder="@_currentPlaceholders.Title" />
                    <FormTextArea @bind-Value="_editingItem.Description" Rows="4" Placeholder="@_currentPlaceholders.Description" />
                    <FormSelect @bind-Value="_editingItem.Priority" Items="_priorityItems" />
                    <div class="btn-group mt-2">
                        <button type="button" class="btn btn-sm btn-success" @onclick="SaveItemAsync">
                            <span class="fas fa-save"></span>&nbsp;Save
                        </button>
                        @if (_isEditing) {
                            <button type="button" class="btn btn-sm btn-dark" @onclick="CancelEditing">
                                <span class="fas fa-ban"></span>&nbsp;Cancel
                            </button>
                        }
                    </div>
                </FormValidator>
            </CardBody>
        </Card>
    </div>
    <div class="col-lg-5">
        <h3 class="text-info border-bottom border-info mb-2">My Todo List</h3>
        @if (_items.Count == 0) {
            <div class="text-center text-success fw-bold p-3">
                TODO: Add some Todo items ;)
            </div>
        }
        else {
            foreach (TodoItemViewModel item in _items) {
                <TodoItem Item="item" OnEdit="EditItem" OnDelete="DeleteItemAsync" OnComplete="CompleteItemAsync" Disable="_isEditing" />
            }
        }
    </div>
</div>